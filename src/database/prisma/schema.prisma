// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// enum UserRole {
//   ADMIN
//   USER
// }

// enum Status {
//   APPROVED
//   PENDING
//   BLOCKED
//   INREVIEW
// }

enum ProductStatus {
  AVAILABLE
  OUTOFSTOCK
  DISCONTINUED
}

enum ProductType {
  GEAR
  GAME
}

model User {
  id             Int         @id @default(autoincrement())
  firstName      String      @db.VarChar(255)
  lastName       String      @db.VarChar(255)
  email          String      @unique
  password       String      @db.VarChar(255)
  profilePicture String?     @db.VarChar(255)
  role           String
  phoneNumber    String      @db.VarChar(255)
  status         String      @default("pending")
  createdAt      DateTime    @default(now())
  Order          Order[]
  Review         Review[]
  Complaints     Complaint[]
  Favorite       Favorite[]
}

model Products {
  id          Int           @id @default(autoincrement())
  name        String        @db.VarChar(255)
  description String        @db.Text
  marketPrice Float
  costPrice   Float
  picture     String        @db.VarChar(255)
  minimumAge  Int
  inventory   Int
  productType ProductType
  status      ProductStatus @default(AVAILABLE)
  Gear        Gear[]
  Game        Game[]
  Cart        Cart[]
  Order       Order[]
  Review      Review[]
  Complaints  Complaint[]
  Favorite    Favorite[]
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  Stock       Stock[]
}

model Gear {
  id        Int      @id @default(autoincrement())
  productID Int
  product   Products @relation(fields: [productID], references: [id])
  size      String   @db.VarChar(255)
  color     String   @db.VarChar(255)
  weight    Float
  height    Float
  width     Float
  length    Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Game {
  id             Int      @id @default(autoincrement())
  productID      Int
  product        Products @relation(fields: [productID], references: [id])
  minimumPlayers Int
  duration       Int
  createdAt      DateTime @default(now())
}

model Order {
  id        Int      @id @default(autoincrement())
  userID    Int
  user      User     @relation(fields: [userID], references: [id])
  productID Int
  product   Products @relation(fields: [productID], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Cart      Cart[]
}

model Cart {
  id        Int      @id @default(autoincrement())
  orderID   Int
  order     Order    @relation(fields: [orderID], references: [id])
  productID Int
  product   Products @relation(fields: [productID], references: [id])
  quantity  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Review {
  id        Int      @id @default(autoincrement())
  userID    Int
  user      User     @relation(fields: [userID], references: [id])
  productID Int
  product   Products @relation(fields: [productID], references: [id])
  rating    Int
  comment   String   @db.Text
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Complaint {
  id        Int      @id @default(autoincrement())
  userID    Int
  user      User     @relation(fields: [userID], references: [id])
  productID Int
  product   Products @relation(fields: [productID], references: [id])
  comment   String   @db.Text
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Favorite {
  id        Int      @id @default(autoincrement())
  userID    Int
  user      User     @relation(fields: [userID], references: [id])
  productID Int
  product   Products @relation(fields: [productID], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Stock {
  id        Int      @id @default(autoincrement())
  productID Int
  product   Products @relation(fields: [productID], references: [id])
  quantity  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
